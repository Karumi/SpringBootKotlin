buildscript {
    ext {
        kotlinVersion = '1.3.21'
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath('com.karumi.kotlinsnapshot:plugin:2.0.0')
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.karumi.kotlin-snapshot'


group 'spring-boot-kotlin'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

configurations {
    ktlint
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "io.springfox:springfox-swagger2:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.2"
    implementation "org.apache.httpcomponents:httpclient:4.5.2"

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation "de.codecentric:spring-boot-admin-starter-client:2.1.2"

    def kotlintestVersion = "3.2.1"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"
    testImplementation "io.kotlintest:kotlintest-assertions-arrow:$kotlintestVersion"
    testImplementation "io.kotlintest:kotlintest-extensions-spring:$kotlintestVersion"

    def arrowVersion = "0.8.2"
    implementation "io.arrow-kt:arrow-core:$arrowVersion"

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'

    ktlint "com.github.shyiko:ktlint:0.20.0"
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}